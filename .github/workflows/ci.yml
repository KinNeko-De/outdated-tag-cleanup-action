name: Continuous Integration

on:
  push:

env:
  MAJOR_MINOR_PATCH: 0.0.1

permissions:
  contents: write

jobs:
  test-javascript:
    name: JavaScript Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Check Format
        id: npm-format-check
        run: npm run format:check

      - name: Lint
        id: npm-lint
        run: npm run lint

      - name: Test
        id: npm-ci-test
        run: npm run ci-test

  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Test Local Action
        id: test-action
        uses: ./
        with:
          milliseconds: 1000

      - name: Print Output
        id: output
        run: echo "${{ steps.test-action.outputs.time }}"

  version:
    name: Version
    runs-on: ubuntu-latest
    needs: [test-javascript, test-action]

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Version suffix
        id: version_suffix
        run: |
          if [[ "${{ github.event_name }}" == 'pull_request' ]]; then
            echo 'for pull request pipeline'
            USE=true
            SUFFIX="${GITHUB_HEAD_REF##*/}.${{github.run_number}}"
            EXTENSION="-${SUFFIX}"
          else
            if [[ "${{ github.ref }}" == "refs/heads/${{ github.event.repository.default_branch }}" ]]; then
              echo 'for default branch pipeline'
              USE=false
              SUFFIX=''
              EXTENSION=''
          else
              echo 'for feature branch pipeline'
              USE=true
              SUFFIX="${GITHUB_REF##*/}.${{github.run_number}}"
              EXTENSION="-${SUFFIX}"
            fi
          fi
          echo 'use_version_suffix' "$USE"
          echo 'version_suffix: ' "$SUFFIX"
          echo "use_version_suffix=$USE" >> "$GITHUB_OUTPUT"
          echo "version_suffix=$SUFFIX" >> "$GITHUB_OUTPUT"
          echo "extension=$EXTENSION" >> "$GITHUB_OUTPUT"
      - name: Semantic version
        id: semantic_version
        run: |
          SEMANTIC_VERSION="${{ env.MAJOR_MINOR_PATCH }}"
          SEMANTIC_VERSION="${SEMANTIC_VERSION}${{ steps.version_suffix.outputs.extension }}"
          printf 'MAJOR_MINOR_PATCH: %s\n' "$MAJOR_MINOR_PATCH"
          printf 'SEMANTIC_VERSION: %s\n' "$SEMANTIC_VERSION"
          echo "semantic_version=$SEMANTIC_VERSION" >> "$GITHUB_OUTPUT"
          echo "major_minor_patch=$MAJOR_MINOR_PATCH" >> "$GITHUB_OUTPUT"
      - name: 'Version upgraded?'
        id: version_check
        run: |
          git fetch --prune --unshallow --tags > /dev/null 2>&1
          last_main_version=$(git tag --list 'v[0-9]*\.[0-9]*\.[0-9]*' | grep -Pv "v[0-9]*\.[0-9]*\.[0-9]*-" | sort -V | tail -n 1)
          printf "Compare last main version: %s with current version: v%s\n" "$last_main_version" "$MAJOR_MINOR_PATCH"
          if [[ $(echo -e "v$MAJOR_MINOR_PATCH\n$last_main_version" | sort -V | head -n 1) == "v$MAJOR_MINOR_PATCH" ]]; then
            printf "Please upgrade the version number to a higher value than %s\n" "$last_main_version"
            exit 1
          fi
      - name: Set version number
        run:
          npm version ${{ steps.semantic_version.outputs.semantic_version }}
          --no-git-tag-version

      - name: Create semantic versioning git tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/v${{ steps.semantic_version.outputs.semantic_version }}",
              sha: context.sha
            })
